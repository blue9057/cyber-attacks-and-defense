This program checks if the filename that you typed is under to your group id.
If it is, it will print out its content, however, it will just exit if
the file is not in your group (not for your effective gid).

Can you exploit 'time-of-check-to-time-of-use' (TOCTTOU) bug in the program
to read the flag?

https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use

This program does not sleep between the time of check and the time of use.
Can you stop the program for a while to swap the file between TOC to TOU?

Hint: A named pipe can make the program 'wait' for your input

    ; The following command creates a named pipe
    $ mkfifo a

    ; A named pipe is a pipe, that can deliver data from one end to the other.
    ; It has two ends, read-end and write-end.
    ; If you supply the name 'a' as the filename to read to the program,
    ; then the program will access the 'read-end' of the named pipe.
    ;
    ; On the other hand, you may access the 'write-end' of the named pipe
    ; by opening the pipe as 'write' allowed;
    ; i.e., fopen("a", "rb"); or open("a", O_WRONLY);
    ;
    ;                     [read-end <-------> write-end]
    ; program <- read data                               write data <- you
    ;
    ;
    ; The program will invoke read(), and it will wait until you supply
    ; data to the pipe, and will read upto 100 bytes.
    ; If you do not supply 100 bytes nor close the file at your end,
    ; the program will keep waiting for your data.

    Can you exploit this 'named pipe' to read the flag on your 2nd read?
    Or, you may apply your brute force but it asks you to wait 2 seconds..

